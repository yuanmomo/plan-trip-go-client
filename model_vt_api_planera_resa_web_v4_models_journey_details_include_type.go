/*
Planera Resa

Sök och planera resor med Västtrafik

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType The different kinds of detailed information that could be included in a get journey details request.
type VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType string

// List of VT.ApiPlaneraResa.Web.V4.Models.JourneyDetailsIncludeType
const (
	VTAPIPLANERARESAWEBV4MODELSJOURNEYDETAILSINCLUDETYPE_TICKETSUGGESTIONS VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType = "ticketsuggestions"
	VTAPIPLANERARESAWEBV4MODELSJOURNEYDETAILSINCLUDETYPE_TRIPLEGCOORDINATES VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType = "triplegcoordinates"
	VTAPIPLANERARESAWEBV4MODELSJOURNEYDETAILSINCLUDETYPE_VALIDZONES VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType = "validzones"
	VTAPIPLANERARESAWEBV4MODELSJOURNEYDETAILSINCLUDETYPE_SERVICEJOURNEYCALLS VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType = "servicejourneycalls"
	VTAPIPLANERARESAWEBV4MODELSJOURNEYDETAILSINCLUDETYPE_SERVICEJOURNEYCOORDINATES VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType = "servicejourneycoordinates"
	VTAPIPLANERARESAWEBV4MODELSJOURNEYDETAILSINCLUDETYPE_LINKS VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType = "links"
	VTAPIPLANERARESAWEBV4MODELSJOURNEYDETAILSINCLUDETYPE_OCCUPANCY VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType = "occupancy"
)

// All allowed values of VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType enum
var AllowedVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeTypeEnumValues = []VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType{
	"ticketsuggestions",
	"triplegcoordinates",
	"validzones",
	"servicejourneycalls",
	"servicejourneycoordinates",
	"links",
	"occupancy",
}

func (v *VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType(value)
	for _, existing := range AllowedVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType", value)
}

// NewVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeTypeFromValue returns a pointer to a valid VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeTypeFromValue(v string) (*VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType, error) {
	ev := VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType: valid values are %v", v, AllowedVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType) IsValid() bool {
	for _, existing := range AllowedVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to VT.ApiPlaneraResa.Web.V4.Models.JourneyDetailsIncludeType value
func (v VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType) Ptr() *VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType {
	return &v
}

type NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType struct {
	value *VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType
	isSet bool
}

func (v NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType) Get() *VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType {
	return v.value
}

func (v *NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType) Set(val *VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType) {
	v.value = val
	v.isSet = true
}

func (v NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType) IsSet() bool {
	return v.isSet
}

func (v *NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType(val *VTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType) *NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType {
	return &NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType{value: val, isSet: true}
}

func (v NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsIncludeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

