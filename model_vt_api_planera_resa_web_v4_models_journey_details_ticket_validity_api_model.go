/*
Planera Resa

Sök och planera resor med Västtrafik

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel{}

// VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel Information about ticket validity.
type VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel struct {
	// The ticket id.
	Id NullableString `json:"id,omitempty"`
	// Indicates if the ticket is valid for the journey.
	IsValidForJourney NullableBool `json:"isValidForJourney,omitempty"`
}

// NewVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel instantiates a new VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel() *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel {
	this := VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel{}
	return &this
}

// NewVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModelWithDefaults instantiates a new VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModelWithDefaults() *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel {
	this := VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) UnsetId() {
	o.Id.Unset()
}

// GetIsValidForJourney returns the IsValidForJourney field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) GetIsValidForJourney() bool {
	if o == nil || IsNil(o.IsValidForJourney.Get()) {
		var ret bool
		return ret
	}
	return *o.IsValidForJourney.Get()
}

// GetIsValidForJourneyOk returns a tuple with the IsValidForJourney field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) GetIsValidForJourneyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsValidForJourney.Get(), o.IsValidForJourney.IsSet()
}

// HasIsValidForJourney returns a boolean if a field has been set.
func (o *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) HasIsValidForJourney() bool {
	if o != nil && o.IsValidForJourney.IsSet() {
		return true
	}

	return false
}

// SetIsValidForJourney gets a reference to the given NullableBool and assigns it to the IsValidForJourney field.
func (o *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) SetIsValidForJourney(v bool) {
	o.IsValidForJourney.Set(&v)
}
// SetIsValidForJourneyNil sets the value for IsValidForJourney to be an explicit nil
func (o *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) SetIsValidForJourneyNil() {
	o.IsValidForJourney.Set(nil)
}

// UnsetIsValidForJourney ensures that no value is present for IsValidForJourney, not even an explicit nil
func (o *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) UnsetIsValidForJourney() {
	o.IsValidForJourney.Unset()
}

func (o VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.IsValidForJourney.IsSet() {
		toSerialize["isValidForJourney"] = o.IsValidForJourney.Get()
	}
	return toSerialize, nil
}

type NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel struct {
	value *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel
	isSet bool
}

func (v NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) Get() *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel {
	return v.value
}

func (v *NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) Set(val *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel(val *VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) *NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel {
	return &NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel{value: val, isSet: true}
}

func (v NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


