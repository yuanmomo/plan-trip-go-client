/*
Planera Resa

Sök och planera resor med Västtrafik

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// VTApiPlaneraResaWebV4ModelsOccupancyLevel Represents a level of occupancy.
type VTApiPlaneraResaWebV4ModelsOccupancyLevel string

// List of VT.ApiPlaneraResa.Web.V4.Models.OccupancyLevel
const (
	VTAPIPLANERARESAWEBV4MODELSOCCUPANCYLEVEL_LOW VTApiPlaneraResaWebV4ModelsOccupancyLevel = "low"
	VTAPIPLANERARESAWEBV4MODELSOCCUPANCYLEVEL_MEDIUM VTApiPlaneraResaWebV4ModelsOccupancyLevel = "medium"
	VTAPIPLANERARESAWEBV4MODELSOCCUPANCYLEVEL_HIGH VTApiPlaneraResaWebV4ModelsOccupancyLevel = "high"
	VTAPIPLANERARESAWEBV4MODELSOCCUPANCYLEVEL_INCOMPLETE VTApiPlaneraResaWebV4ModelsOccupancyLevel = "incomplete"
	VTAPIPLANERARESAWEBV4MODELSOCCUPANCYLEVEL_MISSING VTApiPlaneraResaWebV4ModelsOccupancyLevel = "missing"
	VTAPIPLANERARESAWEBV4MODELSOCCUPANCYLEVEL_NOTPUBLICTRANSPORT VTApiPlaneraResaWebV4ModelsOccupancyLevel = "notpublictransport"
)

// All allowed values of VTApiPlaneraResaWebV4ModelsOccupancyLevel enum
var AllowedVTApiPlaneraResaWebV4ModelsOccupancyLevelEnumValues = []VTApiPlaneraResaWebV4ModelsOccupancyLevel{
	"low",
	"medium",
	"high",
	"incomplete",
	"missing",
	"notpublictransport",
}

func (v *VTApiPlaneraResaWebV4ModelsOccupancyLevel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VTApiPlaneraResaWebV4ModelsOccupancyLevel(value)
	for _, existing := range AllowedVTApiPlaneraResaWebV4ModelsOccupancyLevelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VTApiPlaneraResaWebV4ModelsOccupancyLevel", value)
}

// NewVTApiPlaneraResaWebV4ModelsOccupancyLevelFromValue returns a pointer to a valid VTApiPlaneraResaWebV4ModelsOccupancyLevel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVTApiPlaneraResaWebV4ModelsOccupancyLevelFromValue(v string) (*VTApiPlaneraResaWebV4ModelsOccupancyLevel, error) {
	ev := VTApiPlaneraResaWebV4ModelsOccupancyLevel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VTApiPlaneraResaWebV4ModelsOccupancyLevel: valid values are %v", v, AllowedVTApiPlaneraResaWebV4ModelsOccupancyLevelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VTApiPlaneraResaWebV4ModelsOccupancyLevel) IsValid() bool {
	for _, existing := range AllowedVTApiPlaneraResaWebV4ModelsOccupancyLevelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to VT.ApiPlaneraResa.Web.V4.Models.OccupancyLevel value
func (v VTApiPlaneraResaWebV4ModelsOccupancyLevel) Ptr() *VTApiPlaneraResaWebV4ModelsOccupancyLevel {
	return &v
}

type NullableVTApiPlaneraResaWebV4ModelsOccupancyLevel struct {
	value *VTApiPlaneraResaWebV4ModelsOccupancyLevel
	isSet bool
}

func (v NullableVTApiPlaneraResaWebV4ModelsOccupancyLevel) Get() *VTApiPlaneraResaWebV4ModelsOccupancyLevel {
	return v.value
}

func (v *NullableVTApiPlaneraResaWebV4ModelsOccupancyLevel) Set(val *VTApiPlaneraResaWebV4ModelsOccupancyLevel) {
	v.value = val
	v.isSet = true
}

func (v NullableVTApiPlaneraResaWebV4ModelsOccupancyLevel) IsSet() bool {
	return v.isSet
}

func (v *NullableVTApiPlaneraResaWebV4ModelsOccupancyLevel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVTApiPlaneraResaWebV4ModelsOccupancyLevel(val *VTApiPlaneraResaWebV4ModelsOccupancyLevel) *NullableVTApiPlaneraResaWebV4ModelsOccupancyLevel {
	return &NullableVTApiPlaneraResaWebV4ModelsOccupancyLevel{value: val, isSet: true}
}

func (v NullableVTApiPlaneraResaWebV4ModelsOccupancyLevel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVTApiPlaneraResaWebV4ModelsOccupancyLevel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

